// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SZZP2._2.Data;

namespace SZZP2._2.Migrations
{
    [DbContext(typeof(SZZPContext))]
    [Migration("20190625055513_modDataChange")]
    partial class modDataChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SZZP2._2.Data.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("IPAddress");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SZZP2._2.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SZZP2._2.Models.ADUser", b =>
                {
                    b.Property<string>("NrSap")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateEmployment");

                    b.Property<DateTime?>("EndContract");

                    b.Property<int>("IDDepartment");

                    b.Property<int>("IDOffice");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("NrSap");

                    b.HasIndex("IDOffice");

                    b.ToTable("ADUser");
                });

            modelBuilder.Entity("SZZP2._2.Models.DataChange", b =>
                {
                    b.Property<int>("IDDataChange")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateChange");

                    b.Property<int>("IDDepartment");

                    b.Property<int>("IDOffice");

                    b.Property<string>("Name");

                    b.Property<string>("NrSap");

                    b.Property<string>("StatusDataChange");

                    b.Property<string>("Surname");

                    b.HasKey("IDDataChange");

                    b.HasIndex("NrSap");

                    b.ToTable("DataChange");
                });

            modelBuilder.Entity("SZZP2._2.Models.Department", b =>
                {
                    b.Property<int>("IDDepartment")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDOffice");

                    b.Property<string>("NameDepartment");

                    b.Property<string>("SymbolDeprtament");

                    b.HasKey("IDDepartment");

                    b.HasIndex("IDOffice");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("SZZP2._2.Models.Dismissal", b =>
                {
                    b.Property<int>("IDDismissal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndContract");

                    b.Property<int>("IDDepartment");

                    b.Property<int>("IDOffice");

                    b.Property<string>("Name");

                    b.Property<string>("NrSap");

                    b.Property<int>("Position");

                    b.Property<string>("StatusDismissal");

                    b.Property<string>("Surname");

                    b.HasKey("IDDismissal");

                    b.HasIndex("NrSap");

                    b.ToTable("Dismissal");
                });

            modelBuilder.Entity("SZZP2._2.Models.Employment", b =>
                {
                    b.Property<int>("IDEmployment")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEmployment");

                    b.Property<DateTime?>("EndContract");

                    b.Property<int>("IDDepartment");

                    b.Property<int>("IDOffice");

                    b.Property<int>("IDPosition");

                    b.Property<int>("IDStatus");

                    b.Property<string>("Name");

                    b.Property<string>("NrSap");

                    b.Property<string>("OfficeSymbol");

                    b.Property<string>("Surname");

                    b.HasKey("IDEmployment");

                    b.HasIndex("IDOffice");

                    b.HasIndex("IDPosition");

                    b.HasIndex("IDStatus");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("SZZP2._2.Models.Office", b =>
                {
                    b.Property<int>("IDOffice")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameOffice");

                    b.Property<string>("SymbolOffice");

                    b.HasKey("IDOffice");

                    b.ToTable("Office");
                });

            modelBuilder.Entity("SZZP2._2.Models.Position", b =>
                {
                    b.Property<int>("IDPosition")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePosition");

                    b.HasKey("IDPosition");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("SZZP2._2.Models.Status", b =>
                {
                    b.Property<int>("IDStatus")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameStatus");

                    b.HasKey("IDStatus");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SZZP2._2.Data.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SZZP2._2.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SZZP2._2.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("SZZP2._2.Data.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SZZP2._2.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SZZP2._2.Data.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SZZP2._2.Models.ADUser", b =>
                {
                    b.HasOne("SZZP2._2.Models.Office", "Office")
                        .WithMany("ADUsers")
                        .HasForeignKey("IDOffice")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SZZP2._2.Models.DataChange", b =>
                {
                    b.HasOne("SZZP2._2.Models.ADUser", "ADUsers")
                        .WithMany("DataChanges")
                        .HasForeignKey("NrSap");
                });

            modelBuilder.Entity("SZZP2._2.Models.Department", b =>
                {
                    b.HasOne("SZZP2._2.Models.Office", "Offices")
                        .WithMany("Departments")
                        .HasForeignKey("IDOffice")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SZZP2._2.Models.Dismissal", b =>
                {
                    b.HasOne("SZZP2._2.Models.ADUser", "ADUsers")
                        .WithMany("Dismissals")
                        .HasForeignKey("NrSap");
                });

            modelBuilder.Entity("SZZP2._2.Models.Employment", b =>
                {
                    b.HasOne("SZZP2._2.Models.Office", "Offices")
                        .WithMany("Employment")
                        .HasForeignKey("IDOffice")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SZZP2._2.Models.Position", "Positions")
                        .WithMany()
                        .HasForeignKey("IDPosition")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SZZP2._2.Models.Status", "Statuses")
                        .WithMany()
                        .HasForeignKey("IDStatus")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
